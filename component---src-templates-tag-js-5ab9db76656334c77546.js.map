{"version":3,"sources":["webpack:///./src/templates/tag.js","webpack:///./src/utils/global.js","webpack:///./src/components/PostListing.js"],"names":["TagTemplate","render","tag","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","className","_components_PostListing__WEBPACK_IMPORTED_MODULE_4__","Component","pageQuery","__webpack_require__","d","__webpack_exports__","formatDate","editOnGithub","url_join__WEBPACK_IMPORTED_MODULE_0__","url_join__WEBPACK_IMPORTED_MODULE_0___default","n","moment__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_1___default","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_2__","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_2___default","date","moment","utc","format","dateFormat","post","dateFromFormat","urljoin","repo","slug","PostListing","getPostList","filter","postEdge","node","frontmatter","template","map","path","fields","tags","thumbnail","excerpt","timeToRead","categories","simple","postList","newest","subtract","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","key"],"mappings":"0QAOqBA,4FACnBC,OAAA,WAAS,IACCC,EAAQC,KAAKC,MAAMC,YAAnBH,IACFI,EAAYH,KAAKC,MAAMG,KAAKC,kBAAkBC,MAEpD,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,MAAK,oBAAsBb,EAAtB,OAAgCc,IAAOC,YACpDP,EAAAC,EAAAC,cAAA,OAAKM,UAAU,aACbR,EAAAC,EAAAC,cAAA,6BACkBF,EAAAC,EAAAC,cAAA,SAAIV,IAEtBQ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAab,UAAWA,UAZOc,aAmB5BC,EAAS,+CC1BtBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,KAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAAO,EAAAG,GAIMP,EAAa,SAAAS,GAAI,OAAIC,IAAOC,IAAIF,GAAMG,OAAOrB,IAAOsB,aAEpDZ,EAAe,SAAAa,GACnB,IAAML,EAAOC,IAAOC,IAAIG,EAAKL,MAAMG,OAAOrB,IAAOwB,gBACjD,OAAOC,IAAQzB,IAAO0B,KAAM,6BAAiCR,EAA/C,IAAuDK,EAAKI,KAA5D,iJCHKC,oGACnBC,YAAA,WAgBE,OAfsB1C,KAAKC,MAAnBE,UAELwC,OAAO,SAAAC,GAAQ,MAA2C,SAAvCA,EAASC,KAAKC,YAAYC,WAC7CC,IAAI,SAAAJ,GACH,MAAO,CACLK,KAAML,EAASC,KAAKK,OAAOV,KAC3BW,KAAMP,EAASC,KAAKC,YAAYK,KAChCC,UAAWR,EAASC,KAAKC,YAAYM,UACrCxC,MAAOgC,EAASC,KAAKC,YAAYlC,MACjCmB,KAAMa,EAASC,KAAKK,OAAOnB,KAC3BsB,QAAST,EAASC,KAAKQ,QACvBC,WAAYV,EAASC,KAAKS,WAC1BC,WAAYX,EAASC,KAAKC,YAAYS,iBAM9CzD,OAAA,WAAS,IACC0D,EAAWxD,KAAKC,MAAhBuD,OACFC,EAAWzD,KAAK0C,cAEtB,OACEnC,EAAAC,EAAAC,cAAA,WAASM,UAAS,UAAWyC,EAAS,SAAW,KAC9CC,EAAST,IAAI,SAAAZ,GACZ,IAAML,EAAOT,YAAWc,EAAKL,MACvB2B,EAAS1B,IAAOI,EAAKL,MAAQC,MAAS2B,SAAS,EAAG,UAExD,OACEpD,EAAAC,EAAAC,cAACmD,EAAA,KAAD,CAAMC,GAAIzB,EAAKa,KAAMa,IAAK1B,EAAKxB,OAC7BL,EAAAC,EAAAC,cAAA,OAAKM,UAAU,QAEbR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAK2B,EAAKxB,OACR4C,EAAiD,KAAxCjD,EAAAC,EAAAC,cAAA,OAAKM,UAAU,WAAWgB,IAEtC2B,GACCnD,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OAAf,kBAxCqBE","file":"component---src-templates-tag-js-5ab9db76656334c77546.js","sourcesContent":["import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../layout'\nimport PostListing from '../components/PostListing'\nimport config from '../../data/SiteConfig'\n\nexport default class TagTemplate extends Component {\n  render() {\n    const { tag } = this.props.pageContext\n    const postEdges = this.props.data.allMarkdownRemark.edges\n\n    return (\n      <Layout>\n        <Helmet title={`Posts tagged as \"${tag}\" â€“ ${config.siteTitle}`} />\n        <div className=\"container\">\n          <h1>\n            Posts tagged as <u>{tag}</u>\n          </h1>\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            categories\n            date\n            template\n          }\n        }\n      }\n    }\n  }\n`\n","import urljoin from 'url-join'\nimport moment from 'moment'\nimport config from '../../data/SiteConfig'\n\nconst formatDate = date => moment.utc(date).format(config.dateFormat)\n\nconst editOnGithub = post => {\n  const date = moment.utc(post.date).format(config.dateFromFormat)\n  return urljoin(config.repo, '/blob/master/content/posts', `${date}-${post.slug}.md`)\n}\n\nexport { formatDate, editOnGithub }\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport { formatDate } from '../utils/global'\n\nexport default class PostListing extends Component {\n  getPostList() {\n    const { postEdges } = this.props\n    const postList = postEdges\n      .filter(postEdge => postEdge.node.frontmatter.template === 'post')\n      .map(postEdge => {\n        return {\n          path: postEdge.node.fields.slug,\n          tags: postEdge.node.frontmatter.tags,\n          thumbnail: postEdge.node.frontmatter.thumbnail,\n          title: postEdge.node.frontmatter.title,\n          date: postEdge.node.fields.date,\n          excerpt: postEdge.node.excerpt,\n          timeToRead: postEdge.node.timeToRead,\n          categories: postEdge.node.frontmatter.categories,\n        }\n      })\n    return postList\n  }\n\n  render() {\n    const { simple } = this.props\n    const postList = this.getPostList()\n\n    return (\n      <section className={`posts ${simple ? 'simple' : ''}`}>\n        {postList.map(post => {\n          const date = formatDate(post.date)\n          const newest = moment(post.date) > moment().subtract(1, 'months')\n\n          return (\n            <Link to={post.path} key={post.title}>\n              <div className=\"each\">\n                \n                <div>\n                  <h2>{post.title}</h2>\n                  {!simple ? <div className=\"excerpt\">{date}</div> : null}\n                </div>\n                {newest && (\n                  <div className=\"alert\">\n                    <div className=\"new\">New!</div>\n                  </div>\n                )}\n              </div>\n            </Link>\n          )\n        })}\n      </section>\n    )\n  }\n}\n"],"sourceRoot":""}