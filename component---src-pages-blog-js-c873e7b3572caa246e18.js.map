{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/SEO.js","webpack:///./node_modules/core-js/modules/es6.string.fixed.js","webpack:///./src/utils/global.js","webpack:///./src/components/PostListing.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js"],"names":["BlogPage","state","searchTerm","currentCategories","posts","_this","props","data","edges","filteredPosts","handleChange","_callee","event","_this$setState","_event$target","name","value","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","a","wrap","_context","prev","next","target","setState","filterPosts","stop","_this$state","filter","post","node","frontmatter","title","toLowerCase","includes","length","categories","every","cat","updateCategories","category","prevState","concat","render","_this2","this","_this$state2","filterCount","group","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","_layout__WEBPACK_IMPORTED_MODULE_9__","react_helmet__WEBPACK_IMPORTED_MODULE_8___default","config","siteTitle","_components_SEO__WEBPACK_IMPORTED_MODULE_11__","className","map","active","fieldValue","key","onClick","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_5___default","mark","_callee2","_context2","type","placeholder","onChange","_components_PostListing__WEBPACK_IMPORTED_MODULE_10__","postEdges","Component","pageQuery","SEO","description","postURL","_this$props","postNode","postPath","postSEO","image","postMeta","excerpt","thumbnail","childImageSharp","fixed","src","urljoin","siteUrl","pathPrefix","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","@context","@type","url","alternateName","siteTitleAlt","push","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","content","JSON","stringify","property","userTwitter","__webpack_require__","createHTML","d","__webpack_exports__","formatDate","editOnGithub","url_join__WEBPACK_IMPORTED_MODULE_0__","url_join__WEBPACK_IMPORTED_MODULE_0___default","n","moment__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_1___default","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_2__","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_2___default","date","moment","utc","format","dateFormat","dateFromFormat","repo","slug","PostListing","getPostList","postEdge","template","path","fields","tags","timeToRead","simple","postList","react__WEBPACK_IMPORTED_MODULE_1___default","newest","subtract","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","charAt","slice","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","args","arguments","apply"],"mappings":"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","file":"component---src-pages-blog-js-c873e7b3572caa246e18.js","sourcesContent":["import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../layout'\nimport PostListing from '../components/PostListing'\nimport SEO from '../components/SEO'\nimport config from '../../data/SiteConfig'\n\nexport default class BlogPage extends Component {\n  state = {\n    searchTerm: '',\n    currentCategories: [],\n    posts: this.props.data.posts.edges,\n    filteredPosts: this.props.data.posts.edges,\n  }\n\n  handleChange = async event => {\n    const { name, value } = event.target\n\n    await this.setState({ [name]: value })\n\n    this.filterPosts()\n  }\n\n  filterPosts = () => {\n    const { posts, searchTerm, currentCategories } = this.state\n\n    let filteredPosts = posts.filter(post =>\n      post.node.frontmatter.title.toLowerCase().includes(searchTerm.toLowerCase())\n    )\n\n    if (currentCategories.length > 0) {\n      filteredPosts = filteredPosts.filter(\n        post =>\n          post.node.frontmatter.categories &&\n          currentCategories.every(cat => post.node.frontmatter.categories.includes(cat))\n      )\n    }\n\n    this.setState({ filteredPosts })\n  }\n\n  updateCategories = category => {\n    const { currentCategories } = this.state\n\n    if (!currentCategories.includes(category)) {\n      this.setState(prevState => ({\n        currentCategories: [...prevState.currentCategories, category],\n      }))\n    } else {\n      this.setState(prevState => ({\n        currentCategories: prevState.currentCategories.filter(cat => category !== cat),\n      }))\n    }\n  }\n\n  render() {\n    const { filteredPosts, searchTerm, currentCategories } = this.state\n    const filterCount = filteredPosts.length\n    const categories = this.props.data.categories.group\n\n    return (\n      <Layout>\n        <Helmet title={`Articles – ${config.siteTitle}`} />\n        <SEO />\n        <div className=\"container\">\n          <h1>Articles</h1>\n          <div className=\"category-container\">\n            {categories.map(category => {\n              const active = currentCategories.includes(category.fieldValue)\n\n              return (\n                <div\n                  className={`category-filter ${active ? 'active' : ''}`}\n                  key={category.fieldValue}\n                  onClick={async () => {\n                    await this.updateCategories(category.fieldValue)\n                    await this.filterPosts()\n                  }}\n                >\n                  {category.fieldValue}\n                </div>\n              )\n            })}\n          </div>\n          <div className=\"search-container\">\n            <input\n              className=\"search\"\n              type=\"text\"\n              name=\"searchTerm\"\n              value={searchTerm}\n              placeholder=\"Type here to filter posts...\"\n              onChange={this.handleChange}\n            />\n            <div className=\"filter-count\">{filterCount}</div>\n          </div>\n          <PostListing postEdges={filteredPosts} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query BlogQuery {\n    posts: allMarkdownRemark(limit: 2000, sort: { fields: [fields___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt(pruneLength: 180)\n          timeToRead\n          frontmatter {\n            title\n            tags\n            categories\n            date\n            template\n          }\n        }\n      }\n    }\n    categories: allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___categories) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport urljoin from 'url-join'\nimport config from '../../data/SiteConfig'\n\nexport default class SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props\n    let title\n    let description\n    let image = ''\n    let postURL\n\n    if (postSEO) {\n      const postMeta = postNode.frontmatter\n      title = postMeta.title\n      description = postMeta.description ? postMeta.description : postNode.excerpt\n      if (postMeta.thumbnail) {\n        image = postMeta.thumbnail.childImageSharp.fixed.src\n      }\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath)\n    } else {\n      title = config.siteTitle\n      description = config.siteDescription\n      image = config.siteLogo\n    }\n\n    image = urljoin(config.siteUrl, image)\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix)\n    const schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'WebSite',\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n      },\n    ]\n\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BreadcrumbList',\n          itemListElement: [\n            {\n              '@type': 'ListItem',\n              position: 1,\n              item: {\n                '@id': postURL,\n                name: title,\n                image,\n              },\n            },\n          ],\n        },\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BlogPosting',\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n          headline: title,\n          image: {\n            '@type': 'ImageObject',\n            url: image,\n          },\n          description,\n        }\n      )\n    }\n    return (\n      <Helmet>\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:creator\" content={config.userTwitter} />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    )\n  }\n}\n","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","import urljoin from 'url-join'\nimport moment from 'moment'\nimport config from '../../data/SiteConfig'\n\nconst formatDate = date => moment.utc(date).format(config.dateFormat)\n\nconst editOnGithub = post => {\n  const date = moment.utc(post.date).format(config.dateFromFormat)\n  return urljoin(config.repo, '/blob/master/content/posts', `${date}-${post.slug}.md`)\n}\n\nexport { formatDate, editOnGithub }\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport { formatDate } from '../utils/global'\n\nexport default class PostListing extends Component {\n  getPostList() {\n    const { postEdges } = this.props\n    const postList = postEdges\n      .filter(postEdge => postEdge.node.frontmatter.template === 'post')\n      .map(postEdge => {\n        return {\n          path: postEdge.node.fields.slug,\n          tags: postEdge.node.frontmatter.tags,\n          thumbnail: postEdge.node.frontmatter.thumbnail,\n          title: postEdge.node.frontmatter.title,\n          date: postEdge.node.fields.date,\n          excerpt: postEdge.node.excerpt,\n          timeToRead: postEdge.node.timeToRead,\n          categories: postEdge.node.frontmatter.categories,\n        }\n      })\n    return postList\n  }\n\n  render() {\n    const { simple } = this.props\n    const postList = this.getPostList()\n\n    return (\n      <section className={`posts ${simple ? 'simple' : ''}`}>\n        {postList.map(post => {\n          const date = formatDate(post.date)\n          const newest = moment(post.date) > moment().subtract(1, 'months')\n\n          return (\n            <Link to={post.path} key={post.title}>\n              <div className=\"each\">\n                \n                <div>\n                  <h2>{post.title}</h2>\n                  {!simple ? <div className=\"excerpt\">{date}</div> : null}\n                </div>\n                {newest && (\n                  <div className=\"alert\">\n                    <div className=\"new\">New!</div>\n                  </div>\n                )}\n              </div>\n            </Link>\n          )\n        })}\n      </section>\n    )\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;"],"sourceRoot":""}