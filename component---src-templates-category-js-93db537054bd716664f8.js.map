{"version":3,"sources":["webpack:///./src/templates/category.js","webpack:///./src/utils/global.js","webpack:///./src/components/PostListing.js"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","className","_components_PostListing__WEBPACK_IMPORTED_MODULE_4__","Component","pageQuery","__webpack_require__","d","__webpack_exports__","formatDate","editOnGithub","url_join__WEBPACK_IMPORTED_MODULE_0__","url_join__WEBPACK_IMPORTED_MODULE_0___default","n","moment__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_1___default","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_2__","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_2___default","date","moment","utc","format","dateFormat","post","dateFromFormat","urljoin","repo","slug","PostListing","getPostList","filter","postEdge","node","frontmatter","template","map","path","fields","tags","thumbnail","excerpt","timeToRead","categories","simple","postList","newest","subtract","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","key"],"mappings":"0QAOqBA,4FACnBC,OAAA,WAAS,IACCC,EAAaC,KAAKC,MAAMC,YAAxBH,SACFI,EAAYH,KAAKC,MAAMG,KAAKC,kBAAkBC,MAEpD,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,MAAK,sBAAwBb,EAAxB,OAAuCc,IAAOC,YAC3DP,EAAAC,EAAAC,cAAA,OAAKM,UAAU,aACbR,EAAAC,EAAAC,cAAA,UAAKV,GACLQ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAab,UAAWA,UAVYc,aAiBjCC,EAAS,8CCxBtBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,KAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAAO,EAAAG,GAIMP,EAAa,SAAAS,GAAI,OAAIC,IAAOC,IAAIF,GAAMG,OAAOrB,IAAOsB,aAEpDZ,EAAe,SAAAa,GACnB,IAAML,EAAOC,IAAOC,IAAIG,EAAKL,MAAMG,OAAOrB,IAAOwB,gBACjD,OAAOC,IAAQzB,IAAO0B,KAAM,6BAAiCR,EAA/C,IAAuDK,EAAKI,KAA5D,iJCHKC,oGACnBC,YAAA,WAgBE,OAfsB1C,KAAKC,MAAnBE,UAELwC,OAAO,SAAAC,GAAQ,MAA2C,SAAvCA,EAASC,KAAKC,YAAYC,WAC7CC,IAAI,SAAAJ,GACH,MAAO,CACLK,KAAML,EAASC,KAAKK,OAAOV,KAC3BW,KAAMP,EAASC,KAAKC,YAAYK,KAChCC,UAAWR,EAASC,KAAKC,YAAYM,UACrCxC,MAAOgC,EAASC,KAAKC,YAAYlC,MACjCmB,KAAMa,EAASC,KAAKK,OAAOnB,KAC3BsB,QAAST,EAASC,KAAKQ,QACvBC,WAAYV,EAASC,KAAKS,WAC1BC,WAAYX,EAASC,KAAKC,YAAYS,iBAM9CzD,OAAA,WAAS,IACC0D,EAAWxD,KAAKC,MAAhBuD,OACFC,EAAWzD,KAAK0C,cAEtB,OACEnC,EAAAC,EAAAC,cAAA,WAASM,UAAS,UAAWyC,EAAS,SAAW,KAC9CC,EAAST,IAAI,SAAAZ,GACZ,IAAML,EAAOT,YAAWc,EAAKL,MACvB2B,EAAS1B,IAAOI,EAAKL,MAAQC,MAAS2B,SAAS,EAAG,UAExD,OACEpD,EAAAC,EAAAC,cAACmD,EAAA,KAAD,CAAMC,GAAIzB,EAAKa,KAAMa,IAAK1B,EAAKxB,OAC7BL,EAAAC,EAAAC,cAAA,OAAKM,UAAU,QAEbR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAK2B,EAAKxB,OACR4C,EAAiD,KAAxCjD,EAAAC,EAAAC,cAAA,OAAKM,UAAU,WAAWgB,IAEtC2B,GACCnD,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OAAf,kBAxCqBE","file":"component---src-templates-category-js-93db537054bd716664f8.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../layout'\r\nimport PostListing from '../components/PostListing'\r\nimport config from '../../data/SiteConfig'\r\n\r\nexport default class CategoryTemplate extends Component {\r\n  render() {\r\n    const { category } = this.props.pageContext\r\n    const postEdges = this.props.data.allMarkdownRemark.edges\r\n\r\n    return (\r\n      <Layout>\r\n        <Helmet title={`Posts in category \"${category}\" â€“ ${config.siteTitle}`} />\r\n        <div className=\"container\">\r\n          <h1>{category}</h1>\r\n          <PostListing postEdges={postEdges} />\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query CategoryPage($category: String) {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [fields___date], order: DESC }\r\n      filter: { frontmatter: { categories: { in: [$category] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            date\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            categories\r\n            date\r\n            template\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import urljoin from 'url-join'\r\nimport moment from 'moment'\r\nimport config from '../../data/SiteConfig'\r\n\r\nconst formatDate = date => moment.utc(date).format(config.dateFormat)\r\n\r\nconst editOnGithub = post => {\r\n  const date = moment.utc(post.date).format(config.dateFromFormat)\r\n  return urljoin(config.repo, '/blob/gatsby/content/posts', `${date}-${post.slug}.md`)\r\n}\r\n\r\nexport { formatDate, editOnGithub }\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'gatsby'\r\nimport moment from 'moment'\r\nimport { formatDate } from '../utils/global'\r\n\r\nexport default class PostListing extends Component {\r\n  getPostList() {\r\n    const { postEdges } = this.props\r\n    const postList = postEdges\r\n      .filter(postEdge => postEdge.node.frontmatter.template === 'post')\r\n      .map(postEdge => {\r\n        return {\r\n          path: postEdge.node.fields.slug,\r\n          tags: postEdge.node.frontmatter.tags,\r\n          thumbnail: postEdge.node.frontmatter.thumbnail,\r\n          title: postEdge.node.frontmatter.title,\r\n          date: postEdge.node.fields.date,\r\n          excerpt: postEdge.node.excerpt,\r\n          timeToRead: postEdge.node.timeToRead,\r\n          categories: postEdge.node.frontmatter.categories,\r\n        }\r\n      })\r\n    return postList\r\n  }\r\n\r\n  render() {\r\n    const { simple } = this.props\r\n    const postList = this.getPostList()\r\n\r\n    return (\r\n      <section className={`posts ${simple ? 'simple' : ''}`}>\r\n        {postList.map(post => {\r\n          const date = formatDate(post.date)\r\n          const newest = moment(post.date) > moment().subtract(1, 'months')\r\n\r\n          return (\r\n            <Link to={post.path} key={post.title}>\r\n              <div className=\"each\">\r\n                \r\n                <div>\r\n                  <h2>{post.title}</h2>\r\n                  {!simple ? <div className=\"excerpt\">{date}</div> : null}\r\n                </div>\r\n                {newest && (\r\n                  <div className=\"alert\">\r\n                    <div className=\"new\">New!</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Link>\r\n          )\r\n        })}\r\n      </section>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}