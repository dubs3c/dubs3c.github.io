{"version":3,"sources":["webpack:///./src/templates/page.js","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./src/components/SEO.js","webpack:///./node_modules/core-js/modules/es6.string.fixed.js"],"names":["PageTemplate","render","slug","this","props","pageContext","postNode","data","markdownRemark","page","frontmatter","id","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","_components_SEO__WEBPACK_IMPORTED_MODULE_4__","postPath","postSEO","className","dangerouslySetInnerHTML","__html","html","Component","pageQuery","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","strArray","resultArray","match","length","first","shift","replace","i","component","TypeError","push","str","join","parts","split","normalize","arguments","slice","call","module","exports","undefined","__webpack_require__","SEO","description","postURL","_this$props","image","postMeta","excerpt","thumbnail","childImageSharp","fixed","src","urljoin","siteUrl","pathPrefix","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","@context","@type","url","name","alternateName","siteTitleAlt","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","content","type","JSON","stringify","property","userTwitter","createHTML"],"mappings":"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","file":"component---src-templates-page-js-cb121a5f433e74675beb.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../layout'\r\nimport SEO from '../components/SEO'\r\nimport config from '../../data/SiteConfig'\r\n\r\nexport default class PageTemplate extends Component {\r\n  render() {\r\n    const { slug } = this.props.pageContext\r\n    const postNode = this.props.data.markdownRemark\r\n    const page = postNode.frontmatter\r\n\r\n    if (!page.id) {\r\n      page.id = slug\r\n    }\r\n\r\n    return (\r\n      <Layout>\r\n        <Helmet>\r\n          <title>{`${page.title} â€“ ${config.siteTitle}`}</title>\r\n        </Helmet>\r\n        <SEO postPath={slug} postNode={postNode} postSEO />\r\n        <div className=\"container\">\r\n          <article>\r\n            <header className=\"page-header\">\r\n              <h1>{page.title}</h1>\r\n            </header>\r\n            <div className=\"page\" dangerouslySetInnerHTML={{ __html: postNode.html }} />\r\n          </article>\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query PageBySlug($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      timeToRead\r\n      excerpt\r\n      frontmatter {\r\n        title\r\n        template\r\n      }\r\n      fields {\r\n        nextTitle\r\n        nextSlug\r\n        prevTitle\r\n        prevSlug\r\n        slug\r\n        date\r\n      }\r\n    }\r\n  }\r\n`\r\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","import React, { Component } from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport urljoin from 'url-join'\r\nimport config from '../../data/SiteConfig'\r\n\r\nexport default class SEO extends Component {\r\n  render() {\r\n    const { postNode, postPath, postSEO } = this.props\r\n    let title\r\n    let description\r\n    let image = ''\r\n    let postURL\r\n\r\n    if (postSEO) {\r\n      const postMeta = postNode.frontmatter\r\n      title = postMeta.title\r\n      description = postMeta.description ? postMeta.description : postNode.excerpt\r\n      if (postMeta.thumbnail) {\r\n        image = postMeta.thumbnail.childImageSharp.fixed.src\r\n      }\r\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath)\r\n    } else {\r\n      title = config.siteTitle\r\n      description = config.siteDescription\r\n      image = config.siteLogo\r\n    }\r\n\r\n    image = urljoin(config.siteUrl, image)\r\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix)\r\n    const schemaOrgJSONLD = [\r\n      {\r\n        '@context': 'http://schema.org',\r\n        '@type': 'WebSite',\r\n        url: blogURL,\r\n        name: title,\r\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\r\n      },\r\n    ]\r\n\r\n    if (postSEO) {\r\n      schemaOrgJSONLD.push(\r\n        {\r\n          '@context': 'http://schema.org',\r\n          '@type': 'BreadcrumbList',\r\n          itemListElement: [\r\n            {\r\n              '@type': 'ListItem',\r\n              position: 1,\r\n              item: {\r\n                '@id': postURL,\r\n                name: title,\r\n                image,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          '@context': 'http://schema.org',\r\n          '@type': 'BlogPosting',\r\n          url: blogURL,\r\n          name: title,\r\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\r\n          headline: title,\r\n          image: {\r\n            '@type': 'ImageObject',\r\n            url: image,\r\n          },\r\n          description,\r\n        }\r\n      )\r\n    }\r\n    return (\r\n      <Helmet>\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"image\" content={image} />\r\n\r\n        <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\r\n\r\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\r\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\r\n        <meta property=\"og:title\" content={title} />\r\n        <meta property=\"og:description\" content={description} />\r\n        <meta property=\"og:image\" content={image} />\r\n\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta name=\"twitter:creator\" content={config.userTwitter} />\r\n        <meta name=\"twitter:title\" content={title} />\r\n        <meta name=\"twitter:description\" content={description} />\r\n        <meta name=\"twitter:image\" content={image} />\r\n      </Helmet>\r\n    )\r\n  }\r\n}\r\n","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n"],"sourceRoot":""}