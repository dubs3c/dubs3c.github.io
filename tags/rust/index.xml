<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rust on dubell.io</title><link>https://dubell.io/tags/rust/</link><description>Recent content in Rust on dubell.io</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 26 Apr 2024 20:32:37 +0000</lastBuildDate><atom:link href="https://dubell.io/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Rusty Beginnings: Error Handling in Rust</title><link>https://dubell.io/rusty-beginnings-error-handling-in-rust/</link><pubDate>Fri, 26 Apr 2024 20:32:37 +0000</pubDate><guid>https://dubell.io/rusty-beginnings-error-handling-in-rust/</guid><description>I never liked the verbosity of Rust. Rust code always looked messy and so different from what I am used to. But since I started learning Rust, I have begun to enjoy the language. However, one thing that has been more difficult than what I have imagined it to be, is error handling.
For example, in Go it is normal to return Error and simply set it nil if there is no error.</description></item></channel></rss>