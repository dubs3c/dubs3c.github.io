<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Advisories on dubell.io</title><link>https://dubell.io/categories/advisories/</link><description>Recent content in Advisories on dubell.io</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 14 May 2024 23:00:00 +0200</lastBuildDate><atom:link href="https://dubell.io/categories/advisories/index.xml" rel="self" type="application/rss+xml"/><item><title>Server-Side Request Forgery in HikCentral Professional &lt;= V2.5.1</title><link>https://dubell.io/server-side-request-forgery-in-hikcentral-professional-v2.5.1/</link><pubDate>Tue, 14 May 2024 23:00:00 +0200</pubDate><guid>https://dubell.io/server-side-request-forgery-in-hikcentral-professional-v2.5.1/</guid><description>During an engagement, I encountered HikCentral Professional. I did not find any relevant CVEs and therefore decided to download the software and perform a quick analysis. Upon examining the related configuration files, I immediately identified a Server-Side Request Forgery (SSRF) in the NGINX configuration file. The SSRF allowed an attacker to proxy requests via HikCentral Professional, which could lead to severe consequences. For example, an attacker could use the vulnerability to reach into a private network and access internal services.</description></item><item><title>Unauthenticated LFI in Appwrite 0.5.0 &lt;= 0.12.1</title><link>https://dubell.io/unauthenticated-lfi-in-appwrite-0.5.0-0.12.1/</link><pubDate>Tue, 22 Feb 2022 13:13:37 +0000</pubDate><guid>https://dubell.io/unauthenticated-lfi-in-appwrite-0.5.0-0.12.1/</guid><description>While exploring cyber space I stumbled upon a project called Appwrite. Looked interesting, started browsing the code. Eventually, I discovered an undisclosed vulnerability in one of the endpoints allowing an attacker to read local files on the system.
The endpoint /.well-known/acme-challenge is vulnerable against local file inclusion which allows an attacker to read arbitrary files on the system. The endpoint contains incorrect checks for verifying that file is located within a defined base path.</description></item></channel></rss>